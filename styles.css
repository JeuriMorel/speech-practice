@import url("https://fonts.googleapis.com/css2?family=Inconsolata:wght@200;300;400&display=swap");

:root {
    --color-lt-blue: #0998eb;
    --lt-blue-h: 202;
    --lt-blue-s: 93%;
    --lt-blue-l: 48%;
}

*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    min-height: 100vh;
    font-family: "Inconsolata", monospace;
    font-weight: 300;
    display: grid;
    place-items: center;
}

.container {
    display: grid;
    place-items: center;
    grid-template-rows: 84px auto 64px;
    padding-block: 1rem;
    height: 100%;
    padding: clamp(1rem, 1vw, 2rem);
    width: clamp(375px, 80vw, 900px);
}

.test {
    display: grid;
    grid-template-rows: auto repeat(2, minmax(0, 1fr));
    justify-content: center;
    align-items: center;
    padding-bottom: 2rem;
}

.status {
    width: 8rem;
    height: 3rem;
    margin-inline: auto;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.1rem;
}

.status::after {
    position: absolute;
    inset: 0;
    content: attr(data-confidence);
    font-size: 3rem;
    text-align: center;
}

.status.animate-waves span {
    animation-name: sound;
    animation-timing-function: ease-in-out;
    animation-iteration-count: infinite;
}

.status span {
    width: 1rem;
    height: 0;
    background-color: var(--color-lt-blue);
    border-radius: 2px;
}

span:nth-child(1) {
    animation-duration: 600ms;
    max-height: 1.3rem;
}
span:nth-child(2) {
    animation-duration: 800ms;
    max-height: 2rem;
}
span:nth-child(3) {
    animation-duration: 400ms;
}
span:nth-child(4) {
    animation-duration: 1000ms;
}
span:nth-child(5) {
    animation-duration: 900ms;
    max-height: 2rem;
}
span:nth-child(6) {
    animation-duration: 700ms;
    max-height: 1.3rem;
}

@keyframes sound {
    20% {
        height: 3rem;
    }
    50% {
        height: 0.3rem;
    }
    80% {
        height: 1rem;
    }
    100% {
        height: 0%;
    }
}

.sentence {
    text-align: center;
    font-size: clamp(1.5rem, 0.1071rem + 3.8095vw, 2.25rem);
    font-weight: 400;
}

.sentence-recording {
    padding: 1rem;
}

.sentence-recording:not(:empty)::before {
    display: inline-block;
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
    font: var(--fa-font-solid);
    content: "\f071";
    font-size: 1.5rem;
    margin-right: 2rem;
}
.sentence-recording:not(:empty).success {
    background-color: aquamarine;
}
.sentence-recording:not(:empty).success::before {
    content: "\f058";
}
.sentence-recording:not(:empty).error {
    color: rgb(180, 20, 20);
    background-color: #ffbaba;
}

.buttons {
    display: flex;
    gap: 1rem;
    margin-bottom: 2rem;
}

.btn {
    position: relative;
    text-transform: capitalize;
    font-size: 1.5rem;
    border-radius: 0.4rem;
    cursor: pointer;
    box-shadow: -5px 6px 5px 0px rgba(0, 0, 0, 0.5);
    border-color: #777;
    font-size: clamp(1.25rem, 0.8036rem + 1.9048vw, 1.875rem);
    user-select: none;
}

.btn-record:active:not([disabled]) {
    box-shadow: -3px 3px 3px 0px rgba(0, 0, 0, 0.5);
}
.btn:active:not([disabled]) {
    top: 1px;
}

.btn-record {
    --hue: var(--lt-blue-h);
    --saturation: var(--lt-blue-s);
    --lightness: calc(var(--lt-blue-l) + 15%);

    border-top: 2px solid #777;
    border-right: 2px solid #777;
    border-left: 2px solid white;
    border-bottom: 2px solid white;
    width: 4rem;
    height: 4rem;
    border-radius: 50%;
    aspect-ratio: 1/1;
    color: hsl(var(--hue), var(--saturation), var(--lightness));
}

.btn:disabled {
    cursor: not-allowed;
}

.btn-record:hover,
.btn-record:focus {
    --lightness: var(--lt-blue-l);
}

.btn-new {
    background-color: #ffffff;
    border: 0;
    border-radius: 0.5rem;
    color: #111827;
    font-size: 0.875rem;
    line-height: 1.25rem;
    padding: 0.75rem 1rem;
    text-decoration: none #d1d5db solid;
    text-decoration-thickness: auto;
    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 70%), 0 1px 2px 0 rgb(0 0 0 / 60%);
    touch-action: manipulation;
}

.btn-new:hover {
    background-color: rgb(249, 250, 251);
    outline: 2px solid transparent;
    outline-offset: 2px;
}
.btn:focus-visible {
    box-shadow: none;
}
.btn-record.recording::before {
    content: "\f28d";
    color: red;
}

.btn-record::before {
    display: inline-block;
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
    font: var(--fa-font-solid);
    content: "\f130";
}

.btn-record:disabled::before {
    content: "\f131";
    color: #777;
}

.forms {
    --gap-x: 1rem;
    --gap-y: 0.3rem;
    --label-height: clamp(1rem, 0.8036rem + 1.9048vw, 1.5rem);
    --left: calc(0px - var(--label-height) - var(--gap-x) * 0.7);
    --hue: var(--lt-blue-h);
    --saturation: var(--lt-blue-s);
    --lightness: calc(var(--lt-blue-l) + 15%);
    display: flex;
    font-size: clamp(1rem, 0.6429rem + 1.5238vw, 1.5rem);
    justify-content: space-between;
    width: 100%;
    margin-top: 2rem;
}

.radio-form {
    display: grid;
    grid-template-columns: auto auto;
    align-items: center;
    text-transform: uppercase;
    column-gap: var(--gap-x);
}

input[type="radio"] {
    vertical-align: middle;
    width: calc(var(--label-height) * 0.7);
    height: calc(var(--label-height) * 0.7);
    cursor: pointer;
}
input[type="radio"]:checked + label {
    color: white;
    background-color: transparent;
}
input[type="radio"]:hover + label::before {
    font-size: 300;
    background-color: hsl(var(--hue), var(--saturation), var(--lightness));
    border-color: #333 #333 #777 #777;
}

input[type="radio"]:focus + label::before {
    outline: 3px dashed red;
    outline-offset: 1px;
}

input[type="radio"]:checked + label::before {
    --lightness: var(--lt-blue-l);
    background-color: hsl(var(--hue), var(--saturation), var(--lightness));
    border-color: #333 #333 #777 #777;
    width: calc(100% + (var(--label-height) * 1.5) + var(--gap-x));
}

label {
    position: relative;
    cursor: pointer;
    height: var(--label-height);
    line-height: var(--label-height);
    z-index: 20;
    isolation: isolate;
}

label::before {
    --hue: var(--lt-blue-h);
    --saturation: var(--lt-blue-s);
    --lightness: calc(var(--lt-blue-l) + 25%);

    content: "";
    position: absolute;
    width: var(--label-height);
    height: var(--label-height);
    background-color: white;
    border: 2px solid hsl(var(--hue), var(--saturation), var(--lightness));
    left: var(--left);
    top: 50%;
    border-radius: 100vw;
    transform: translateY(-50%);
    transition: width 250ms cubic-bezier(0, 0.73, 0.74, 0.39);
    z-index: -1;
    pointer-events: none;
}
